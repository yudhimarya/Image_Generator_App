{"ast":null,"code":"import{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import styled from\"styled-components\";import Button from\"./button\";import{GenerateAIImage}from\"../api\";import{CreatePost}from\"../api\";import{AutoAwesome,CreateRounded}from'@mui/icons-material';import SearchBar from'./TextInput';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const From=styled.div`\n    flex:1;\n    padding: 16px 20px;\n    display:flex;\n    flex-direction:column;\n    gap: 9%;\n    justify-content:center;\n    `;const Top=styled.div`flex:1;\n    flex-direction: column;\n    gap: 6px;`;const Title=styled.div`\n    font-size: 28px;\n    font-weight:500;\n    color: ${_ref=>{let{theme}=_ref;return theme.text_primary;}};`;const Desc=styled.div`font-size: 17px;\n    font-weight:400;\n    color: ${_ref2=>{let{theme}=_ref2;return theme.text_secondary;}}`;const Body=styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    font-size:12px;\n    font-weight:400;\n    color:${_ref3=>{let{theme}=_ref3;return theme.text_secondary;}};\n    `;const Actions=styled.div`\n    flex: 1;\n    display: flex;\n    gap:8px;\n    `;const GenerateImageForm=_ref4=>{let{post,setPost,createPostLoading,generateImageLoading,setGenerateImageLoading,setcreatePostLoading}=_ref4;const navigate=useNavigate();const[error,setError]=useState(\"\");const generateImageFun=async()=>{if(!post.prompt||post.prompt.trim()===\"\"){alert(\"Prompt cannot be empty. Please provide a valid input.\");return;}try{setGenerateImageLoading(true);// Start loading\nconst response=await GenerateAIImage({prompt:post.prompt});setPost(prevPost=>({...prevPost,photo:response.data.photo}));// Update only the photo part of the post\n}catch(error){var _error$response;console.error(\"Error generating image:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);alert(\"Failed to generate image. Please try again.\");}finally{setGenerateImageLoading(false);// Stop loading\n}};// const createPostFun= async () =>\n//     {\n//     try{   \n//     setcreatePostLoading(true);\n//     const response = await CreatePost({ post })\n//     if (response.status === 200 || response.status === 201) {\n//         navigate(\"/\"); // Redirect to home page\n//     } else {\n//         alert(\"Failed to create the post. Please try again.\");\n//     }\n// } catch (error) {\n//     console.error(\"Error generating image:\", error.response?.data || error.message);\n//     alert(\"Failed to generate image. Please try again.\");\n// } finally {\n//     setcreatePostLoading(false); // Stop loading\n// }\n// }\nconst createPostFun=async()=>{setcreatePostLoading(true);await CreatePost(post).then(res=>{setcreatePostLoading(false);navigate(\"/\");}).catch(error=>{var _error$reponse,_error$reponse$data;setError(error===null||error===void 0?void 0:(_error$reponse=error.reponse)===null||_error$reponse===void 0?void 0:(_error$reponse$data=_error$reponse.data)===null||_error$reponse$data===void 0?void 0:_error$reponse$data.message);setcreatePostLoading(false);});};return/*#__PURE__*/_jsxs(From,{children:[/*#__PURE__*/_jsxs(Top,{children:[/*#__PURE__*/_jsx(Title,{children:\"Generate Image with prompt\"}),/*#__PURE__*/_jsx(Desc,{children:\"Write your promt according to the image you want \"})]}),/*#__PURE__*/_jsxs(Body,{children:[/*#__PURE__*/_jsx(SearchBar,{label:\"AUTHOR\",placeholder:\"Enter your name...\",value:post.name,handleChange:e=>setPost({...post,name:e.target.value})}),/*#__PURE__*/_jsx(SearchBar,{label:\"IMAGE PROMPT\",name:\"yudhi\",rows:\"8\",value:post.prompt,handleChange:e=>setPost({...post,prompt:e.target.value}),placeholder:\"Write a detailed prompt about the image...\"}),\"** You can post the AI Generated Image to the Community **\"]}),/*#__PURE__*/_jsxs(Actions,{children:[/*#__PURE__*/_jsx(Button,{text:\"Generate Image\",flex:true,leftIcon:/*#__PURE__*/_jsx(AutoAwesome,{}),isLoading:generateImageLoading,isdisabled:post.prompt===\"\",onClick:()=>generateImageFun()}),/*#__PURE__*/_jsx(Button,{text:\"Post Image\",flex:true,type:\"secondary\",leftIcon:/*#__PURE__*/_jsx(CreateRounded,{}),isLoading:createPostLoading,isdisabled:post.name===\"\"||post.prompt===\"\"||post.photo===\"\",onClick:()=>createPostFun()})]})]});};export default GenerateImageForm;","map":{"version":3,"names":["useState","useNavigate","styled","Button","GenerateAIImage","CreatePost","AutoAwesome","CreateRounded","SearchBar","jsx","_jsx","jsxs","_jsxs","From","div","Top","Title","_ref","theme","text_primary","Desc","_ref2","text_secondary","Body","_ref3","Actions","GenerateImageForm","_ref4","post","setPost","createPostLoading","generateImageLoading","setGenerateImageLoading","setcreatePostLoading","navigate","error","setError","generateImageFun","prompt","trim","alert","response","prevPost","photo","data","_error$response","console","message","createPostFun","then","res","catch","_error$reponse","_error$reponse$data","reponse","children","label","placeholder","value","name","handleChange","e","target","rows","text","flex","leftIcon","isLoading","isdisabled","onClick","type"],"sources":["C:/Users/yudhi/Desktop/PROGRAMMING/PROJECT/IMAGE_GENERATOR/client/src/components/GenerateImageForm.jsx"],"sourcesContent":["import {useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\"\r\nimport Button from \"./button\"\r\nimport { GenerateAIImage } from \"../api\";\r\nimport { CreatePost } from \"../api\";\r\nimport { AutoAwesome, CreateRounded } from '@mui/icons-material';\r\nimport SearchBar from './TextInput';\r\nconst From= styled.div`\r\n    flex:1;\r\n    padding: 16px 20px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    gap: 9%;\r\n    justify-content:center;\r\n    `;\r\nconst Top= styled.div`flex:1;\r\n    flex-direction: column;\r\n    gap: 6px;`;\r\nconst Title= styled.div`\r\n    font-size: 28px;\r\n    font-weight:500;\r\n    color: ${({theme})=> theme.text_primary};`;\r\nconst Desc= styled.div`font-size: 17px;\r\n    font-weight:400;\r\n    color: ${({theme})=> theme.text_secondary}`;  \r\nconst Body= styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 18px;\r\n    font-size:12px;\r\n    font-weight:400;\r\n    color:${({theme})=> theme.text_secondary};\r\n    `;\r\nconst Actions= styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    gap:8px;\r\n    `;\r\n\r\nconst GenerateImageForm = ({\r\n    post, \r\n    setPost,\r\n    createPostLoading, generateImageLoading,\r\n    setGenerateImageLoading,\r\n    setcreatePostLoading,\r\n}) => {\r\n    const navigate= useNavigate()\r\n    const [error,setError] = useState(\"\")\r\n    const generateImageFun = async () => {\r\n        if (!post.prompt || post.prompt.trim() === \"\") {\r\n            alert(\"Prompt cannot be empty. Please provide a valid input.\");\r\n            return;\r\n        }\r\n        try {\r\n            setGenerateImageLoading(true); // Start loading\r\n    \r\n            const response = await GenerateAIImage({ prompt: post.prompt });\r\n    \r\n            setPost((prevPost) => ({\r\n                ...prevPost,\r\n                photo: response.data.photo,\r\n            })); // Update only the photo part of the post\r\n        } catch (error) {\r\n            console.error(\"Error generating image:\", error.response?.data || error.message);\r\n            alert(\"Failed to generate image. Please try again.\");\r\n        } finally {\r\n            setGenerateImageLoading(false); // Stop loading\r\n        }\r\n    };\r\n    \r\n    // const createPostFun= async () =>\r\n    //     {\r\n    //     try{   \r\n    //     setcreatePostLoading(true);\r\n    //     const response = await CreatePost({ post })\r\n    //     if (response.status === 200 || response.status === 201) {\r\n    //         navigate(\"/\"); // Redirect to home page\r\n    //     } else {\r\n    //         alert(\"Failed to create the post. Please try again.\");\r\n    //     }\r\n    \r\n    // } catch (error) {\r\n    //     console.error(\"Error generating image:\", error.response?.data || error.message);\r\n    //     alert(\"Failed to generate image. Please try again.\");\r\n    // } finally {\r\n    //     setcreatePostLoading(false); // Stop loading\r\n    // }\r\n    // }\r\n\r\n    const createPostFun = async ()=>{\r\n        setcreatePostLoading(true);\r\n        await CreatePost(post)\r\n            .then((res)=>{\r\n                setcreatePostLoading(false);\r\n                navigate(\"/\")\r\n            })\r\n            .catch((error)=>{\r\n                setError(error?.reponse?.data?.message);\r\n                setcreatePostLoading(false);\r\n            })\r\n    }\r\n\r\n  return (\r\n    <From>\r\n        <Top>\r\n            <Title>Generate Image with prompt</Title>\r\n                \r\n            <Desc>Write your promt according to the image you want </Desc>\r\n        </Top>\r\n        <Body>\r\n            <SearchBar label=\"AUTHOR\" \r\n            \r\n            \r\n            placeholder=\"Enter your name...\"\r\n            value={post.name}\r\n            handleChange={(e)=>setPost({...post,name: e.target.value})}\r\n            />\r\n            <SearchBar label=\"IMAGE PROMPT\" \r\n            name=\"yudhi\"\r\n            rows='8'\r\n            value={post.prompt}\r\n            handleChange={(e)=>setPost({...post,prompt: e.target.value})}\r\n            placeholder=\"Write a detailed prompt about the image...\"/>\r\n            \r\n            ** You can post the AI Generated Image to the Community **\r\n        </Body>\r\n        <Actions>\r\n            <Button text=\"Generate Image\" flex leftIcon={<AutoAwesome></AutoAwesome>}\r\n            isLoading={generateImageLoading}\r\n            isdisabled={post.prompt===\"\" }\r\n            onClick={()=>generateImageFun()}\r\n            />\r\n        \r\n        <Button text=\"Post Image\" flex type=\"secondary\" leftIcon={<CreateRounded/>}\r\n        isLoading={createPostLoading}\r\n        isdisabled={post.name===\"\"|| post.prompt===\"\"|| post.photo===\"\"}\r\n        onClick={()=>createPostFun()}/></Actions>\r\n    </From>\r\n  )\r\n}\r\n\r\nexport default GenerateImageForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}